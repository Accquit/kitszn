
-- Create orders table to store order information
CREATE TABLE public.orders (
    id uuid NOT NULL DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id uuid REFERENCES auth.users(id) ON DELETE SET NULL,
    total numeric(10, 2) NOT NULL,
    status text NOT NULL DEFAULT 'Pending',
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    shipping_address jsonb,
    customer_name text,
    customer_email text
);

-- Create order_items table to link products to orders
CREATE TABLE public.order_items (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id uuid NOT NULL REFERENCES public.orders(id) ON DELETE CASCADE,
    product_id integer REFERENCES public.products(id) ON DELETE RESTRICT,
    quantity integer NOT NULL,
    price numeric(10, 2) NOT NULL
);

-- Add comments to tables and columns
COMMENT ON TABLE public.orders IS 'Stores customer orders.';
COMMENT ON COLUMN public.orders.shipping_address IS 'Shipping address in JSON format.';
COMMENT ON TABLE public.order_items IS 'Stores individual items for each order.';

-- Enable Row-Level Security for both tables
ALTER TABLE public.orders ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.order_items ENABLE ROW LEVEL SECURITY;

-- RLS Policies for the 'orders' table
CREATE POLICY "Admins can manage all orders" ON public.orders
    FOR ALL USING (public.is_admin()) WITH CHECK (public.is_admin());

CREATE POLICY "Users can view their own orders" ON public.orders
    FOR SELECT USING (auth.uid() = user_id);

CREATE POLICY "Users can create their own orders" ON public.orders
    FOR INSERT WITH CHECK (auth.uid() = user_id);

-- RLS Policies for the 'order_items' table
CREATE POLICY "Admins can manage all order items" ON public.order_items
    FOR ALL USING (public.is_admin()) WITH CHECK (public.is_admin());

CREATE POLICY "Users can view items of their own orders" ON public.order_items
    FOR SELECT USING (EXISTS (
        SELECT 1 FROM public.orders WHERE orders.id = order_items.order_id AND orders.user_id = auth.uid()
    ));

CREATE POLICY "Users can insert items for their own orders" ON public.order_items
    FOR INSERT WITH CHECK (EXISTS (
        SELECT 1 FROM public.orders WHERE orders.id = order_items.order_id AND orders.user_id = auth.uid()
    ));

